/*  CategoryEditor.java: Editor for word categories.
 * 
 *  Conman's Dictionary, a dictionary application for conlang makers.
 *  Copyright (C) 2006,2007,2008,2009,2010  Urpo Lankinen
 *  
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.beastwithin.conmandictionary;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import javax.swing.ListModel;
import javax.swing.event.ListDataEvent;
import javax.swing.event.ListDataListener;
import org.jdesktop.application.Action;

/**
 * Editor for word categories.
 * @author  wwwwolf
 */
public class CategoryEditor extends javax.swing.JDialog {

    private class CategoryListModel implements ListModel {

        private List<ListDataListener> listDataListeners;
        private List<Category> categories;

        public CategoryListModel() {
            listDataListeners = Collections.synchronizedList(new ArrayList<ListDataListener>());
            categories = null;
        }

        public void addListDataListener(ListDataListener l) {
            listDataListeners.add(l);
        }

        public void removeListDataListener(ListDataListener l) {
            listDataListeners.remove(l);
        }

        public void refresh() {
            ListDataEvent e = new ListDataEvent(this, ListDataEvent.CONTENTS_CHANGED, 0, categories.size() - 1);
            for (ListDataListener l : listDataListeners) {
                l.contentsChanged(e);
            }
        }

        public Object getElementAt(int n) {
            return categories.get(n);
        }

        public int getSize() {
            return categories.size();
        }

        public List<Category> getCategories() {
            return categories;
        }

        public void setCategories(List<Category> categories) {
            this.categories = categories;
            refresh();
        }
    }

    private MainWindow parent = null;
    private CategoryListModel categoryListModel = null;
    private Dictionary model = null;

    
    public CategoryEditor(MainWindow parent, boolean modal, Dictionary model) {
        super(parent.getFrame(), modal);
        this.parent = parent;
        this.categoryListModel = new CategoryListModel();
        this.setModel(model);
        initComponents();
    }

    public final void setModel(Dictionary model) {
        this.model = model;
        categoryListModel.setCategories(model.getCategories());
    }
    public Dictionary getModel() {
        return model;
    }

    // FIXME: See WordClass.java for a similar mess-up.
    private void sortCategoryList(List<Category> categoryList) {
        Object a[] = categoryList.toArray();
        Arrays.sort(a);
        categoryList.clear();
        for (int i = 0; i < a.length; i++) {
            categoryList.add((Category) a[i]);
        }
    }

    @Action
    public void close() {
        parent.notifyCategoryChanges();
        dispose();
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wordClassScrollPane = new javax.swing.JScrollPane();
        wordClassList = new javax.swing.JList();
        nameLabel = new javax.swing.JLabel();
        nameEntry = new javax.swing.JTextField();
        descriptionLabel = new javax.swing.JLabel();
        descriptionScrollPane = new javax.swing.JScrollPane();
        descriptionEntry = new javax.swing.JTextArea();
        deleteButton = new javax.swing.JButton();
        doneButton = new javax.swing.JButton();
        flagButton = new javax.swing.JToggleButton();
        modifyButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(org.beastwithin.conmandictionary.ConmanDictionary.class).getContext().getResourceMap(CategoryEditor.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        wordClassScrollPane.setName("wordClassScrollPane"); // NOI18N

        wordClassList.setName("wordClassList"); // NOI18N
        wordClassScrollPane.setViewportView(wordClassList);

        nameLabel.setLabelFor(nameEntry);
        nameLabel.setText(resourceMap.getString("nameLabel.text")); // NOI18N
        nameLabel.setName("nameLabel"); // NOI18N

        nameEntry.setName("nameEntry"); // NOI18N

        descriptionLabel.setLabelFor(descriptionEntry);
        descriptionLabel.setText(resourceMap.getString("descriptionLabel.text")); // NOI18N
        descriptionLabel.setName("descriptionLabel"); // NOI18N

        descriptionScrollPane.setName("descriptionScrollPane"); // NOI18N

        descriptionEntry.setColumns(20);
        descriptionEntry.setRows(5);
        descriptionEntry.setName("descriptionEntry"); // NOI18N
        descriptionScrollPane.setViewportView(descriptionEntry);

        deleteButton.setText(resourceMap.getString("deleteButton.text")); // NOI18N
        deleteButton.setEnabled(false);
        deleteButton.setName("deleteButton"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(org.beastwithin.conmandictionary.ConmanDictionary.class).getContext().getActionMap(CategoryEditor.class, this);
        doneButton.setAction(actionMap.get("close")); // NOI18N
        doneButton.setText(resourceMap.getString("doneButton.text")); // NOI18N
        doneButton.setName("doneButton"); // NOI18N

        flagButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/beastwithin/conmandictionary/resources/flag.png"))); // NOI18N
        flagButton.setToolTipText(resourceMap.getString("flagButton.toolTipText")); // NOI18N
        flagButton.setName("flagButton"); // NOI18N
        flagButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flagButtonClicked(evt);
            }
        });

        modifyButton.setText(resourceMap.getString("modifyButton.text")); // NOI18N
        modifyButton.setName("modifyButton"); // NOI18N

        addButton.setText(resourceMap.getString("addButton.text")); // NOI18N
        addButton.setName("addButton"); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(wordClassScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(nameLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(nameEntry, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(flagButton))
            .add(layout.createSequentialGroup()
                .add(descriptionLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(descriptionScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(247, Short.MAX_VALUE)
                .add(addButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(modifyButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(deleteButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(doneButton)
                .add(4, 4, 4))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(wordClassScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(nameLabel)
                        .add(nameEntry, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(flagButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(descriptionScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(doneButton)
                            .add(deleteButton)
                            .add(modifyButton)
                            .add(addButton)))
                    .add(descriptionLabel)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void flagButtonClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flagButtonClicked
        // Do nothing in particular, for now
}//GEN-LAST:event_flagButtonClicked
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextArea descriptionEntry;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JScrollPane descriptionScrollPane;
    private javax.swing.JButton doneButton;
    private javax.swing.JToggleButton flagButton;
    private javax.swing.JButton modifyButton;
    private javax.swing.JTextField nameEntry;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JList wordClassList;
    private javax.swing.JScrollPane wordClassScrollPane;
    // End of variables declaration//GEN-END:variables
    
}
