/*  AboutBox.java: A box for abouts. Or something.
 * 
 *  Conman's Dictionary, a dictionary application for conlang makers.
 *  Copyright (C) 2013  Urpo Lankinen
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.beastwithin.conmandictionary.ui;

import java.io.*;

/**
 * About box.
 * 
 * In other words, the "About this application" dialog.
 * You know the drill. Why am I writing this comment?
 * 
 * @author wwwwolf
 */
public class AboutBox extends javax.swing.JDialog {
    /** HTML resource file containing the about box text. */
    private static final String ABOUT_TEXT_FILE = 
        "org/beastwithin/conmandictionary/ui/aboutText.html";

    /**
     * Constructor for the About Box.
     */
    public AboutBox(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        // My initialisation stuff...
        setAboutText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        aboutBoxTextScrollPane = new javax.swing.JScrollPane();
        aboutBoxText = new javax.swing.JTextPane();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/beastwithin/conmandictionary/ui/UIMessages"); // NOI18N
        setTitle(bundle.getString("AboutBox.title")); // NOI18N
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setModal(true);
        setResizable(false);

        aboutBoxTextScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        aboutBoxText.setEditable(false);
        aboutBoxText.setContentType("text/html"); // NOI18N
        aboutBoxTextScrollPane.setViewportView(aboutBoxText);

        closeButton.setText(bundle.getString("AboutBox.closeButton")); // NOI18N
        closeButton.setActionCommand("aboutbox-close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(aboutBoxTextScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 344, Short.MAX_VALUE)
                        .addComponent(closeButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(aboutBoxTextScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        switch(evt.getActionCommand()) {
            case "aboutbox-close":
                this.dispose();
                break;
            default:
                break;
        }
    }//GEN-LAST:event_closeButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane aboutBoxText;
    private javax.swing.JScrollPane aboutBoxTextScrollPane;
    private javax.swing.JButton closeButton;
    // End of variables declaration//GEN-END:variables

    /**
     * Load the About Box text from the HTML resource file specified in
     * ABOUT_TEXT_FILE.
     */
    private void setAboutText() {
        InputStream t = ClassLoader.getSystemResourceAsStream(ABOUT_TEXT_FILE);
        BufferedReader r = new BufferedReader(new InputStreamReader(t));
        StringBuffer text = new StringBuffer();
        try {
            String readLine = "";
            while(readLine != null) {
                readLine = r.readLine();
                if(readLine != null) {
                    text.append(readLine);
                }
            }
        } catch(IOException ioe) {
        }
        this.aboutBoxText.setText(text.toString());
    }    
}
